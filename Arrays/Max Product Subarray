Given an integer array nums, find a contiguous non-empty subarray within the array that has the largest product, and return the product.

It is guaranteed that the answer will fit in a 32-bit integer.

A subarray is a contiguous subsequence of the array.

 
Input: nums = [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.

#USING LOOPS
SIMILAR TO KADANE 
T.C-O(N)
S.C-O(1)

class Solution {
    public int maxProduct(int[] nums) {
    int p=1;
    int max= Integer.MIN_VALUE;
    //LEFT SIDE
        
        for(int i=0;i<nums.length;i++)
        {
            p=p*nums[i];
           max=Math.max(p,max);
            if(p==0)
                p=1;
        
        }
        //right side
        p=1;
     for(int i=0;i<nums.length;i++)
        {
            p=p*nums[nums.length-i-1];
           max=Math.max(p,max);
            if(p==0)
                p=1;
        
        }
    
    return max;
    
    }
}
