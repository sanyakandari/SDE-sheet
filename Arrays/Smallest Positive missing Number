Given an unsorted integer array nums, return the smallest missing positive integer.
You must implement an algorithm that runs in O(n) time and uses constant extra space.

Input: nums = [1,2,0]
Output: 3

#BRUTE FORCE
USING HASHING METHOD, 
T.C= O(N)
S.C=O(N)

ALGO-
1. update the val of arr[index] for val >0
2. iterate through  the array, return the element ==0

JAVA CODE-
class Solution
{
    //Function to find the smallest positive number missing from the array.
    static int missingNumber(int arr[], int size)
    {
      //Using hashing method
     
      int max=arr[0];
      for(int i=0;i<size;i++)
      {
          if(max<arr[i])
            max=arr[i];
      }
       int a[]= new int[max+1];
      for(int i:arr)
      {
          if(i>0)
            a[i]++;
          
      }
      
      for(int i=1;i<=max;i++)
      {
          if(a[i]==0)
            return i;
      }
      return max+1;
    }
}

#OPTIMAL FORCE

