Given two binary search trees root1 and root2, return a list containing all the integers from both trees sorted in ascending order.

Input: root1 = [2,1,4], root2 = [1,0,3]
Output: [0,1,1,2,3,4]

JAVA CODE-

class Solution {
    public List<Integer> getAllElements(TreeNode root1, TreeNode root2) {
        
         List<Integer> res= new ArrayList<>();
           List<Integer> res1= new ArrayList<>();
           List<Integer> res2= new ArrayList<>();
        element(root1,res1);
        element1(root2,res2);
        for(int i=0;i<res1.size();i++)
            res.add(res1.get(i));
        for(int i=0;i<res2.size();i++)
            res.add(res2.get(i));
        
        Collections.sort(res);
        return res;

    }
    public void  element(TreeNode root1, List<Integer> res1)
    {
        if(root1==null)
             return ;
        
        element(root1.left,res1);
        res1.add(root1.val);
        element(root1.right,res1);
        
    }
    
    public void  element1(TreeNode root2, List<Integer> res2)
    {
        if(root2==null)
             return ;
        
        element(root2.left,res2);
        res2.add(root2.val);
        element(root2.right,res2);
        
    }
}
