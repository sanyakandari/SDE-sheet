      8
        /   \    
      4      12
    /  \    /  \
   2    6  10   14

Key: 11  Floor: 10  Ceil: 12
Key: 1   Floor: -1  Ceil: 2
Key: 6   Floor: 6   Ceil: 6
Key: 15  Floor: 14  Ceil: -1

ALGO:-
1. if the key present in BST , return the node
2. if key < root , go left and let ceil = root.data
3. if key > root, go to right

JAVA CODE-
class soltuion{

public static int findCeil(TreeNode root, int key)
{
   int ceil=-1;
   while(root!=null) 
     {
        //if the key present in BST
        if(key==root.data)
          {
             ceil= root.data;
             return ceil;
            }
         if(key>root.data)
           root=root.right;
           
        if(key<root.data)
          {
             ceil= root.data;
             root=root.left;
           }
        }
      return ceil;
    }
  }
