Given a binary tree, find its level order traversal.
Level order traversal of a tree is breadth-first traversal for the tree.
Input:
    1
  /   \ 
 3     2
Output:1 3 2

ALGO-
1.Start by pushing the root to the queue
2.check the size of queue == no . of elements in a level
3.while queue is not empty , run a loop till levelsize
4. add the queue.poll to the list
5. if the pop node has left or right node too push them into the queue



JAVA CODE-
class Solution
{
    //Function to return the level order traversal of a tree.
    static List<List<Integer>> levelOrder(Node node) 
    {
        ArrayList<Integer> bfs= new ArrayList<>();
        if(node==null)
         return bfs;
     Queue<Node> queue= new LinkedList<>();
         queue.add(node);
         while(!queue.isEmpty())
         {
             int levelsize= queue.size();
             List<Integer> currlevel= new ArrayList<>();
             for(int i=0;i<levelsize;i++)
             {
                 Node current= queue.poll();
                 currlevel.add(current.data);
                 
                 if(current.left!=null)
                   queue.add(current.left);
                 if(current.right!=null)
                   queue.add(current.right);
    
             }
             bfs.add(currlevel);
         }
         return bfs;
    }
}


