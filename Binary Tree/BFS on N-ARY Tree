Given an n-ary tree, return the level order traversal of its nodes' values.

Nary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).

 Input: root = [1,null,3,2,4,null,5,6]
Output: [[1],[3,2,4],[5,6]]

JAVA CODE-
class Solution {
    public List<List<Integer>> levelOrder(Node root) {
        List<List<Integer>> bfs = new ArrayList<>();
        if(root==null)
             return bfs;
        Queue<Node> queue= new LinkedList<>();
        queue.add(root);
        while(!queue.isEmpty())
        {
            List<Integer>level = new ArrayList<>();
            int size= queue.size();
            for(int k=0;k<size;k++)
            {
                Node curr= queue.poll();
                level.add(curr.val);
                List<Node> nodes= new ArrayList<>();
                nodes=curr.children;
                if(nodes.isEmpty()==false)
                {
                    int n=nodes.size();
                    //add children to queue
                    for(int i=0;i<n;i++)
                        queue.add(nodes.get(i));   
                }
                
            }
            
            bfs.add(level);
            
            
        }
        return bfs;
    }
}
