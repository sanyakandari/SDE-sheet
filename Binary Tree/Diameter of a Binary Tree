Given the root of a binary tree, return the length of the diameter of the tree.

The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root.

The length of a path between two nodes is represented by the number of edges between them.

 Input: root = [1,2,3,4,5]
Output: 3
Explanation: 3 is the length of the path [4,2,1,3] or [5,2,1,3].

USING DFS
ALGO-
1. check for every node the left height and right height
2. return the max height to the parent node
3. calculate diameter = left+right+1;
4. update the diameter for max 
5. return the max diameter

JAVA CODE-
class TreeDiameter {
static int diameter = 0;

    private static int findHeight(Node root) {
        if(root == null) return 0;

        int leftHeight = findHeight(root.left);
        int rightHeight = findHeight(root.right);
        
        int currentDiameter = leftHeight + rightHeight + 1;

        diameter = Math.max(currentDiameter, diameter);
        return Math.max(leftHeight, rightHeight) + 1;
    }

    public static int findDiameter(Node root) {
        findHeight(root);
        return diameter;
    }
}
