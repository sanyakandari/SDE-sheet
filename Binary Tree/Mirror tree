Given a Binary Tree, convert it into its mirror.
MirrorTree1            
Input:
      1
    /  \
   2    3
Output: 2 1 3
Explanation: The tree is
   1    (mirror)  1
 /  \    =>      /  \
3    2          2    3
The inorder of mirror is 2 1 3

#USING RECURSION
T.C -O(N)
S.C- O(N)//STACK

ALGO-
1.store the left and right nodes 
2. now swap the positions
3. call for both sides


JAVA CODE-
class Solution {
    // Function to convert a binary tree into its mirror tree.
    void mirror(Node node) {
        // Your code here
        if(node==null)
          return ;
       Node left= node.left;
       Node right =node.right;
       
       //interchange position
       node.left=right;
       node.right=left;
        
        //recursion call on both sides
        mirror(node.left);
        mirror(node.right);
    }
}
