Given a string s, find the longest palindromic subsequence's length in s.

A subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.
Input: s = "bbbab"
Output: 4
Explanation: One possible longest palindromic subsequence is "bbbb".

#USING TOP DOWN 
LCS --> USE STRING B= REVERSE OF A
AND APPLY LCS

 JAVA CODE:-
 class Solution {    
    public int longestPalindromeSubseq(String s) {
    //LPS(A) -->LCS(A,REVERSEOF A)
        //using top down
        int n=s.length();
        int t[][]= new int[n+1][n+1];
        String b= reverse(s);
        for(int i=1;i<n+1;i++)
        {
            for(int j=1;j<n+1;j++)
            {
                if(s.charAt(i-1)==b.charAt(j-1))
                    t[i][j]=1+t[i-1][j-1];
                else
                     t[i][j]= Math.max(t[i-1][j],t[i][j-1]);
            }
        }
    return t[n][n];
    }
    public String reverse(String a)
    {
        String res="";
        for(int i=a.length()-1;i>=0;i--)
            res=res+a.charAt(i);
        return res;
        
        
    }
}
