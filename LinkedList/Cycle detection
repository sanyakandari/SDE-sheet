Given head, the head of a linked list, determine if the linked list has a cycle in it.
Input: head = [3,2,0,-4], pos = 1
Output: true
Explanation: There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed).

#USING FLOYD CYCLE DETECTION ALGORITHM
1.use two pointers, slow and fast
2. slow moves 1 step and fast moves 2 step
3. if at any point slow==fast , then linkedList is cyclic

T.C-O(N)
S.C-O(1)

JAVA CODE-
public class Solution {
    public boolean hasCycle(ListNode head) {
        //floyd cycle detection algo
         //S.C-O(1)  T.C=O(N)
 
        ListNode slow=head;//move 1 step
        ListNode fast=head; //move 2 step
        while(fast!=null && fast.next!=null)
        {
           
            slow=slow.next;
            fast=fast.next.next;
             if(fast==slow)
                return true;
        
        }
        return false;
    }
}
