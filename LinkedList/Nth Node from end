Given a linked list consisting of L nodes and given a number N. The task is to find the Nth node from the end of the linked list.
Input:
N = 2
LinkedList: 1->2->3->4->5->6->7->8->9
Output: 8
Explanation: In the first example, there
are 9 nodes in linked list and we need
to find 2nd node from end. 2nd node
from end os 8.  

#USING SIMILAR CONCEPT OF FLOYD DETECTION 
BY USING TWO POINTERS 

1. slow=head
2. fast= n times ahead of slow
3. then for loop while(fast!null)
4. move the pointers 1 step each
5. at the end , when fast==null, return slow

T.C- O(N)
S.C- O(1)

JAVA CODE-
//Function to find the data of nth node from the end of a linked list.
    int getNthFromLast(Node head, int n)
    {
     Node slow=head;
     Node fast=head;
     int i=0;
     //to keep the fast pointer at the nth position from slow
     while(i<n)
     {
         if(fast==null)
          return -1;
         fast=fast.next;
         
         i++;
     }
     
     while(fast!=null)
     {
         slow=slow.next;
         fast=fast.next;
         
     }
     return slow.data;
     
    }

