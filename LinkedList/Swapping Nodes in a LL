You are given the head of a linked list, and an integer k.

Return the head of the linked list after swapping the values of the kth node from the beginning and the kth node from the end (the list is 1-indexed).

 Input: head = [1,2,3,4,5], k = 2
Output: [1,4,3,2,5]

JAVA CODE-
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode swapNodes(ListNode head, int k) {
        int first=0,last=0;
        ListNode dum1= head;
        ListNode dum2= head;
        int i=0,j=0;
        while(dum1!=null &&i<k-1)
        {
            dum1=dum1.next;
            i++;
        }
        int size=1;
        first=dum1.val;
        //last element;
        while(dum2!=null)
        {
            dum2=dum2.next;
            size++;
        }
        i=size-k;
       ListNode dum3=head;
        while(dum3!=null &&j<i-1 )
        {
            dum3=dum3.next;
            j++;
        }
        last=dum3.val;
        //swap
        int temp=dum1.val;
        dum1.val=dum3.val;
        dum3.val=temp;
        return head;
    }
}
