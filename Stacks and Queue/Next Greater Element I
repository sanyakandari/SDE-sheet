GIVEN NORMAL ARRAY ONLY CHECK ON THE RIGHT SIDE .
ALGO-
1. create a stack 
2. start iterating from the back. check if there is any element in the stack greater than the num[i]
3. if stack is empty, nge does'nt exist , nge[i]=-1
4. always push the element into the stack after finding its nge
5. check if the element present in stack is greater than num[i] , then NGE is the top
6. pop all the elements for stack that are lesser than nums[i] , they areof no use 


T.C-O(n)
S.C-O(n)

JAVA CODE-
class Solution {
    public int[] nextGreaterElements(int[] nums) {
        int n= nums.length;
        int nge[]= new int[n];
        //stack 
        Stack<Integer> st= new Stack<>();
        //start iterating from the back
        for(int i=n-1;i>=0;i--)
        {
            //removing all the smaller elements from stack
            while(st.isEmpty()== false && st.peek()<=nums[i])
                st.pop();
         
            if(i<n)
            {
                if(st.isEmpty()==false)
                     nge[i]=st.peek(); //add the nge into res i.e the top of stack
                else
                    nge[i]=-1;  //is stack is empty then no nge available
                
                
            }
            //push the element into stack
            st.push(nums[i]);
            
            
            
        }
        return nge;
    }
}
